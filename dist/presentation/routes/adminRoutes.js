"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const express_1 = __importDefault(require("express"));
const AdminController_1 = require("../controllers/Admin/AdminController");
const LoginAdminUseCase_1 = require("../../application/usecases/admin/LoginAdminUseCase");
const UserMongoRepository_1 = require("../../infrastructure/repositories/user/UserMongoRepository");
const BeneficiaryController_1 = require("../controllers/Admin/BeneficiaryController");
const VolunteerController_1 = require("../controllers/Admin/VolunteerController");
const DonorController_1 = require("../controllers/Admin/DonorController");
const AdminAuthMiddleware_1 = require("../../middlewares/AdminAuthMiddleware");
// import { RegisterUserUseCase } from "../../application/usecases/user/RegisterUserUseCase";
const router = express_1.default.Router();
const userRepository = new UserMongoRepository_1.UserMongoRepository();
const loginUseCase = new LoginAdminUseCase_1.LoginAdminUseCase(userRepository);
const beneficiaryController = new BeneficiaryController_1.BeneficiaryController();
const volunteerController = new VolunteerController_1.VolunteerController();
const donorController = new DonorController_1.DonorController();
const adminController = new AdminController_1.AdminController(loginUseCase);
router.post("/login", (req, res) => adminController.login(req, res));
router.get("/beneficiaries", AdminAuthMiddleware_1.authMiddleware, beneficiaryController.getAllBeneficiaries);
router.put("/beneficiaries/block/:id", AdminAuthMiddleware_1.authMiddleware, beneficiaryController.blockBeneficiary);
router.put("/beneficiaries/unblock/:id", AdminAuthMiddleware_1.authMiddleware, beneficiaryController.unblockBeneficiary);
router.get("/beneficiary/edit/:id", AdminAuthMiddleware_1.authMiddleware, beneficiaryController.getBeneficiary);
router.put("/beneficiary/update/:id", AdminAuthMiddleware_1.authMiddleware, beneficiaryController.editBeneficiary);
// router.post("/beneficiary/create", beneficiaryController.addBeneficiary);
router.get("/volunteers", AdminAuthMiddleware_1.authMiddleware, (req, res) => volunteerController.getAllVolunteers(req, res));
router.put("/volunteers/block/:id", AdminAuthMiddleware_1.authMiddleware, volunteerController.blockVolunteer);
router.put("/volunteers/unblock/:id", AdminAuthMiddleware_1.authMiddleware, volunteerController.unblockVolunteer);
router.get("/volunteers/edit/:id", AdminAuthMiddleware_1.authMiddleware, volunteerController.getVolunteer);
router.put("/volunteers/update/:id", AdminAuthMiddleware_1.authMiddleware, volunteerController.editVolunteer);
router.get("/donors", AdminAuthMiddleware_1.authMiddleware, (req, res) => donorController.getAllDonors(req, res));
router.put("/donors/block/:id", AdminAuthMiddleware_1.authMiddleware, donorController.blockDonor);
router.put("/donors/unblock/:id", AdminAuthMiddleware_1.authMiddleware, donorController.unblockDonor);
router.get("/donors/edit/:id", AdminAuthMiddleware_1.authMiddleware, donorController.getDonor);
router.put("/donors/update/:id", AdminAuthMiddleware_1.authMiddleware, donorController.editDonor);
router.get("/reports", AdminAuthMiddleware_1.authMiddleware, (req, res) => adminController.getDonationReport(req, res));
exports.default = router;
